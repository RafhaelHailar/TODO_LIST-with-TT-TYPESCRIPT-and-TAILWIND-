{"mappings":"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","sources":["dragdrop.js"],"sourcesContent":["\"use strict\";\nclass DragDrop {\n    constructor(container, orderHolder, orderName) {\n        this.container = container;\n        this.target = null;\n        this.initialPosition = {\n            x: null,\n            y: null\n        };\n        this.items = this.holders;\n        this.isDragging = false;\n        this.orderHolder = orderHolder;\n        this.order = orderHolder[orderName];\n        this.orderName = orderName;\n    }\n    makeHolders() {\n        let items = this.items;\n        for (let i = 0; i < items.length; i++) {\n            let holder = document.createElement(\"div\");\n            holder.className = \"holder\";\n            let { top, left, width, height } = DragDrop.utils.getBoundingClientRect(items[i]);\n            let containerBox = DragDrop.utils.getBoundingClientRect(this.container);\n            holder.style.backgroundColor = \"rgba(0,0,0,.04)\";\n            holder.style.margin = getComputedStyle(items[i]).margin;\n            holder.style.width = width + \"px\";\n            holder.style.height = height + \"px\";\n            holder.style.transform = `translate(${left - containerBox.x}px,${top - containerBox.y}px)`;\n            this.container.appendChild(holder);\n        }\n        this.holders = this.container.querySelectorAll(\".holder\");\n    }\n    removeHolders() {\n        let holders = this.container.querySelectorAll(\".holder\");\n        for (let i = 0; i < holders.length; i++) {\n            let holder = holders[i];\n            holder.remove();\n        }\n    }\n    setItems() {\n        this.removeHolders();\n        let childrens = this.container.children;\n        for (let i = 0; i < childrens.length; i++) {\n            let children = childrens[i];\n            children.classList.add(\"item\");\n            children.style.position = \"absolute\";\n            children.style.transition = \"transform 0s\";\n        }\n        this.items = this.container.querySelectorAll(\".item\");\n        this.makeHolders();\n        let items = this.items;\n        let holders = this.holders;\n        for (let i = 0; i < items.length; i++) {\n            let item = items[i];\n            item.setAttribute(\"data-ddid\", this.order[i].id);\n            let holder = holders[i];\n            let holderBoxY = DragDrop.utils.getBoundingClientRect(holder, \"y\");\n            let containerBoxY = DragDrop.utils.getBoundingClientRect(this.container, \"y\");\n            item.style.margin = '0';\n            item.style.transform = `translateY(${holderBoxY - containerBoxY}px)`;\n            setTimeout(() => {\n                item.style.transition = `transform 0.15s ease-in`;\n            });\n        }\n    }\n    updateItems() {\n        let items = this.items;\n        let holders = this.holders;\n        for (let i = 0; i < items.length; i++) {\n            let item = items[i];\n            let index = Number(item.getAttribute(\"data-ddid\"));\n            if (this.target == index)\n                continue;\n            let holder = holders[this.order.indexOf(DragDrop.utils.getObjectById(this.order, \"id\", index))];\n            let holderBoxY = DragDrop.utils.getBoundingClientRect(holder, \"y\");\n            let containerBoxY = DragDrop.utils.getBoundingClientRect(this.container, \"y\");\n            item.style.transform = `translateY(${holderBoxY - containerBoxY}px)`;\n        }\n    }\n    /*\n     * The first contact or the first touch\n     * it will look for an element that contain an item class when you clicked to an element,\n     * if the element you clicked does not contain the class it will look for its parent,\n     * it will look until the element is the body.\n     * then get its data id,from the data id find the element in this.items that contain the same,\n     * id data value then set its transition to transform 0s,\n     * then set the inital position value to the positon of where you click.\n    */\n    firstContact(event) {\n        let eventTarget = event.target;\n        let current_element = event.target;\n        while (current_element != document.body) {\n            if (current_element.classList.contains(\"item\"))\n                break;\n            current_element = current_element.parentElement;\n        }\n        let target = current_element.getAttribute(\"data-ddid\");\n        if (target == null)\n            return;\n        let item = Array.from(this.items).find((value) => {\n            let element = value;\n            return element.getAttribute(\"data-ddid\") == target;\n        });\n        item.style.transition = \"transform 0s\";\n        this.target = Number(target);\n        let { pageX, pageY } = event;\n        this.initialPosition = {\n            x: pageX,\n            y: pageY\n        };\n    }\n    /*\n     * The dragging part when the user hold the target item\n     * if there is no target item dont run the function ,\n     *\n     *\n    */\n    dragging(event) {\n        if (this.target == null)\n            return;\n        let currentPosition = {\n            x: event.pageX,\n            y: event.pageY\n        };\n        this.isDragging = true;\n        let holder = this.holders[this.order.indexOf(DragDrop.utils.getObjectById(this.order, \"id\", this.target))];\n        let holderBoxY = DragDrop.utils.getBoundingClientRect(holder, \"y\");\n        let item = this.items[Array.from(this.items).indexOf(Array.from(this.items).find(value => {\n            let element = value;\n            return Number(element.getAttribute(\"data-ddid\")) == this.target;\n        }))];\n        item.style.transform = `translate(${currentPosition.x - this.initialPosition.x}px,${(holderBoxY - DragDrop.utils.getBoundingClientRect(this.container, \"y\")) + currentPosition.y - this.initialPosition.y}px)`;\n        this.collission(holder);\n    }\n    collission(current) {\n        let currentBoxY = DragDrop.utils.getBoundingClientRect(current, \"y\");\n        let holders = this.holders;\n        for (let i = 0; i < holders.length; i++) {\n            let holder = holders[i];\n            if (current == holder)\n                continue;\n            let holderBox = DragDrop.utils.getBoundingClientRect(holder);\n            let item = this.items[Array.from(this.items).indexOf(Array.from(this.items).find(value => {\n                let element = value;\n                return Number(element.getAttribute(\"data-ddid\")) == this.target;\n            }))];\n            let itemBox = DragDrop.utils.getBoundingClientRect(item);\n            if (Math.abs((holderBox.y + holderBox.height / 2) - (itemBox.y + itemBox.height / 2)) <= itemBox.height / 2) {\n                this.orderHolder[this.orderName] = DragDrop.utils.insertAt(this.order, DragDrop.utils.getObjectById(this.order, \"id\", this.target), i);\n                this.order = this.orderHolder[this.orderName];\n                this.initialPosition.y = (this.initialPosition.y - currentBoxY) + DragDrop.utils.getBoundingClientRect(holders[this.order.indexOf(DragDrop.utils.getObjectById(this.order, \"id\", this.target))], \"y\");\n                this.updateItems();\n            }\n        }\n    }\n    releaseContact() {\n        if (this.target == null)\n            return;\n        let item = this.items[Array.from(this.items).indexOf(Array.from(this.items).find(value => {\n            let element = value;\n            return Number(element.getAttribute(\"data-ddid\")) == this.target;\n        }))];\n        item.style.transition = `transform 0.15s ease-in`;\n        item.style.opacity = 1;\n        this.target = null;\n        function draggingStop() {\n            this.isDragging = false;\n        }\n        setTimeout(draggingStop.bind(this), 150);\n        this.updateItems();\n    }\n    init() {\n        this.container.style.display = \"flex\";\n        this.container.style.flexDirection = \"column\";\n        this.container.style.position = \"relative\";\n        this.setItems();\n        const handleFirstContact = (event) => {\n            event.stopPropagation();\n            this.firstContact(event);\n        };\n        const handleDragging = (event) => {\n            this.dragging(event);\n            event.stopPropagation();\n        };\n        const handleReleaseContact = (event) => { event.stopPropagation(); this.releaseContact(); };\n        const reqr = (event) => {\n            if (this.isDragging)\n                event.stopPropagation();\n        };\n        this.container.addEventListener(\"mousedown\", handleFirstContact, true);\n        this.container.addEventListener(\"click\", (event) => reqr(event), true);\n        this.container.addEventListener(\"mousemove\", handleDragging, true);\n        window.addEventListener(\"mouseup\", handleReleaseContact, true);\n    }\n}\nDragDrop.utils = {\n    insertAt: function (array, target, to) {\n        let initial_index = array.indexOf(target);\n        if (initial_index < to) {\n            return array.slice(0, initial_index).concat(array.slice(initial_index + 1, to + 1)).concat([target]).concat(array.slice(to + 1, array.length));\n        }\n        else if (initial_index > to) {\n            return array.slice(0, to).concat([target]).concat(array.slice(to, initial_index)).concat(array.slice(initial_index + 1, array.length));\n        }\n    },\n    getBoundingClientRect: function (target, ...properties) {\n        let rect = target.getBoundingClientRect();\n        if (properties.length == 1) {\n            return rect[properties[0]];\n        }\n        else if (!properties || properties.length == 0)\n            return rect;\n        let result = {};\n        for (let i = 0; i < properties.length; i++) {\n            let property = properties[i];\n            result[property] = rect[property];\n        }\n        return result;\n    },\n    getObjectById(container, key, value) {\n        return container.find(element => element[key] == value);\n    }\n};\n"],"names":[],"version":3,"file":"index.10724fe0.js.map","sourceRoot":"/__parcel_source_root/"}