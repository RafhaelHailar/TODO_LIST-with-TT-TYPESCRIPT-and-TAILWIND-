{"mappings":"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","sources":["index.js"],"sourcesContent":["var DragDrop = /** @class */ (function () {\n    function DragDrop(container) {\n        this.container = container;\n        this.holding = false;\n        this.initialPosition = {\n            x: this.container.offsetLeft,\n            y: this.container.offsetTop\n        };\n        this.initialPositionHTML = document.createElement(\"div\");\n        this.initialPositionHTML.innerHTML = \"x: \".concat(this.initialPosition.x, \" y: \").concat(this.initialPosition.y);\n        document.body.appendChild(this.initialPositionHTML);\n        this.changedPositionHTML = document.createElement(\"div\");\n        this.changedPositionHTML.innerHTML = \"\";\n        document.body.appendChild(this.changedPositionHTML);\n    }\n    DragDrop.prototype.updateHolding = function (isHolding) {\n        this.holding = isHolding;\n    };\n    DragDrop.prototype.firstContact = function (position) {\n        this.initialPosition = position;\n        this.initialPositionHTML.innerHTML = \"x: \".concat(this.initialPosition.x, \" y: \").concat(this.initialPosition.y);\n        this.updateHolding(true);\n    };\n    DragDrop.prototype.releaseContact = function () {\n        this.updateHolding(false);\n    };\n    DragDrop.prototype.isInContact = function () {\n        return this.holding;\n    };\n    DragDrop.prototype.init = function () {\n        var _this = this;\n        var handleFirstContact = function (event) {\n            var x = event.pageX;\n            var y = event.pageY;\n            _this.firstContact({ x: x, y: y });\n        };\n        var handleReleaseContact = function () {\n            _this.releaseContact();\n        };\n        var handleDragging = function (event) {\n            if (!_this.isInContact())\n                return;\n            var x = event.pageX;\n            var y = event.pageY;\n            var delta_x = x - _this.initialPosition.x;\n            var delta_y = y - _this.initialPosition.y;\n            _this.container.style.transform = \"translate(\".concat(delta_x, \"px,\").concat(delta_y, \"px)\");\n            _this.changedPositionHTML.innerHTML = \"x: \".concat(x, \" y: \").concat(y);\n            /*    this.initialPosition = {x,y}; */\n        };\n        this.container.addEventListener(\"mousedown\", handleFirstContact);\n        this.container.addEventListener(\"mousemove\", handleDragging);\n        window.addEventListener(\"mouseup\", handleReleaseContact);\n    };\n    return DragDrop;\n}());\nvar TaskHandler = /** @class */ (function () {\n    function TaskHandler(container) {\n        this._TASKS = [];\n        //container all html used\n        this.HTML = {\n            addTask: container.querySelector(\"#add-task-form\"),\n            taskList: container.querySelector(\"#task-list\"),\n            noTask: container.querySelector(\"#no-task\")\n        };\n    }\n    //as the name say it take a Task type value and push that to the _TASKS container and then update the display\n    TaskHandler.prototype.addTask = function (task) {\n        this._TASKS.push(task);\n        this.displayTask();\n    };\n    //remove the task by the index and then update the display\n    TaskHandler.prototype.removeTask = function (index) {\n        this._TASKS.splice(index, 1);\n        this.displayTask();\n    };\n    //update the task by the index and then update the display\n    TaskHandler.prototype.updateTask = function (index) {\n        var task_item = this.HTML.taskList.querySelectorAll(\"#task-list .task-item\")[index];\n        var task_name_input = task_item.querySelector(\"input\");\n        task_name_input === null || task_name_input === void 0 ? void 0 : task_name_input.removeAttribute(\"disabled\");\n        task_name_input === null || task_name_input === void 0 ? void 0 : task_name_input.focus();\n        task_name_input === null || task_name_input === void 0 ? void 0 : task_name_input.addEventListener(\"blur\", finishUpdate.bind(this));\n        function finishUpdate() {\n            task_name_input === null || task_name_input === void 0 ? void 0 : task_name_input.setAttribute(\"disabled\", \"\");\n            this._TASKS[index].task_name = task_name_input === null || task_name_input === void 0 ? void 0 : task_name_input.value;\n        }\n    };\n    TaskHandler.prototype.displayTask = function () {\n        var _this = this;\n        //remove the html tasklist child/s\n        this.HTML.taskList.innerHTML = \"\";\n        //show \"NO TASK\" html if there is no task in the task list\n        this.updateNoTaskDisplay(this.getTasksTotal() > 0);\n        var _loop_1 = function (i) {\n            var task_name = this_1._TASKS[i].task_name;\n            //outer cointainer\n            var container = document.createElement(\"div\");\n            container.className = \"task-item flex border justify-between cursor-pointer select-none absolute w-full\";\n            //the task name starts with disabled / can't be edited , but once the update button is clicked it will be updatable again\n            var task_name_display = document.createElement(\"input\");\n            task_name_display.setAttribute(\"disabled\", \"\");\n            task_name_display.className = \"disabled:bg-white disabled:cursor-pointer\";\n            task_name_display.value = task_name;\n            //the done and update buttons\n            var done_btn = document.createElement(\"button\");\n            done_btn.innerHTML = \"DONE\";\n            var update_btn = document.createElement(\"button\");\n            update_btn.innerHTML = \"UPDATE\";\n            done_btn.className = update_btn.className = \"border px-5 py-2\";\n            //add the handlers\n            done_btn.addEventListener(\"click\", function () { return _this.removeTask(i); });\n            update_btn.addEventListener(\"click\", function () { return _this.updateTask(i); });\n            //put all of the to the container\n            container.appendChild(task_name_display);\n            container.appendChild(update_btn);\n            container.appendChild(done_btn);\n            //add the handler for drag and drop\n            var drag_drop = new DragDrop(container);\n            drag_drop.init();\n            //put the container to the task list\n            this_1.HTML.taskList.appendChild(container);\n            //solution for disabled element event listener don't work\n            var task_name_display_box = document.createElement(\"div\");\n            task_name_display_box.className = \"absolute top-0 left-0\";\n            task_name_display_box.style.width = task_name_display.offsetWidth + \"px\";\n            task_name_display_box.style.height = task_name_display.offsetHeight + \"px\";\n            container.appendChild(task_name_display_box);\n            container.style.transform = \"translateY(\".concat(i * container.offsetHeight, \"px)\");\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.getTasksTotal(); i++) {\n            _loop_1(i);\n        }\n    };\n    TaskHandler.prototype.updateNoTaskDisplay = function (hide) {\n        if (hide)\n            this.HTML.noTask.classList.add(\"hidden\");\n        else\n            this.HTML.noTask.classList.remove(\"hidden\");\n    };\n    TaskHandler.prototype.getTasksTotal = function () {\n        return this._TASKS.length;\n    };\n    TaskHandler.prototype.init = function () {\n        this.HTML.addTask.addEventListener(\"submit\", handleAddTask.bind(this));\n        //handle events\n        function handleAddTask(event) {\n            event.preventDefault();\n            //get the add task input value\n            var task_name_input = this.HTML.addTask.querySelector(\"input\");\n            var task_name = task_name_input.value;\n            var TASK = {\n                task_name: task_name\n            };\n            //reset the input \n            task_name_input.value = \"\";\n            //add the task\n            this.addTask(TASK);\n        }\n    };\n    return TaskHandler;\n}());\nvar taskHandler = new TaskHandler(document.querySelector(\"#task-handler\"));\ntaskHandler.init();\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}