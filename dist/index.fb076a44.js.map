{"mappings":"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","sources":["dragdrop.ts"],"sourcesContent":["class DragDrop {\r\n    container: HTMLElement;\r\n    target: null | number;\r\n    initialPosition: Record<string,null | number>;\r\n    items: any;\r\n    holders: any;\r\n    order: number[];\r\n    isDragging: boolean;\r\n\r\n    constructor(container: HTMLElement) {\r\n        this.container = container;\r\n        this.target = null;\r\n        this.initialPosition = {\r\n            x : null,\r\n            y : null\r\n        };\r\n        this.order = [];\r\n        this.items = this.holders;\r\n        this.isDragging = false;\r\n    }\r\n\r\n    makeHolders(): void {\r\n        let items = this.items;\r\n        for (let i = 0;i < items.length;i++) {\r\n            let holder = document.createElement(\"div\");\r\n            holder.className = \"holder\";\r\n            let {top,left,width,height} = DragDrop.utils.getBoundingClientRect(items[i]) as DOMRect;\r\n            let containerBox = DragDrop.utils.getBoundingClientRect(this.container) as DOMRect;\r\n            \r\n            holder.style.backgroundColor = \"rgba(0,0,0,.04)\";\r\n            holder.style.margin = getComputedStyle(items[i]).margin;\r\n            holder.style.width = width + \"px\";\r\n            holder.style.height = height + \"px\";\r\n            holder.style.top = `translate(${left - containerBox.x}px,${top - containerBox.y}px)`;\r\n            this.container.appendChild(holder);\r\n        }\r\n        this.holders = this.container.querySelectorAll(\".holder\");\r\n    }\r\n\r\n    removeHolders(): void {\r\n        let holders = this.container.querySelectorAll(\".holder\");\r\n        for (let i = 0;i < holders.length;i++) {\r\n            let holder = holders[i];\r\n            holder.remove();\r\n        }\r\n    }   \r\n\r\n    setItems(): void {\r\n        this.removeHolders();\r\n        \r\n        let childrens = this.container.children;         \r\n        for (let i = 0;i < childrens.length;i++) {\r\n            let children = childrens[i] as HTMLElement;\r\n            children.classList.add(\"item\");\r\n            children.style.position = \"absolute\";\r\n            children.style.transition = \"transform 0s\";\r\n        }\r\n        \r\n        this.items = this.container.querySelectorAll(\".item\") as NodeListOf<Element>;\r\n        this.makeHolders();\r\n\r\n        let items = this.items;\r\n        let holders = this.holders;\r\n        for (let i = 0;i < items.length;i++) {\r\n            let item = items[i];\r\n            item.setAttribute(\"data-ddid\",i);\r\n            let holder = holders[i];\r\n            let holderBoxY = DragDrop.utils.getBoundingClientRect(holder,\"y\") as number;\r\n            let containerBoxY = DragDrop.utils.getBoundingClientRect(this.container,\"y\") as number;\r\n            item.style.margin = '0';\r\n            item.style.transform = `translateY(${holderBoxY - containerBoxY}px)`;\r\n\r\n            setTimeout(() => {\r\n                item.style.transition = `transform 0.15s ease-in`;\r\n            });\r\n\r\n            this.order.push(i);\r\n        }\r\n    }\r\n\r\n    updateItems(): void {\r\n        let items = this.items;\r\n        let holders = this.holders;\r\n        for (let i = 0;i < items.length;i++) {\r\n            let item = items[i];\r\n            let index = Number(item.getAttribute(\"data-ddid\"));\r\n            if (this.target == index) continue;\r\n            let holder = holders[this.order.indexOf(index)];\r\n            let holderBoxY = DragDrop.utils.getBoundingClientRect(holder,\"y\") as number;\r\n            let containerBoxY = DragDrop.utils.getBoundingClientRect(this.container,\"y\") as number;\r\n            item.style.transform = `translateY(${holderBoxY - containerBoxY}px)`;\r\n        }\r\n    }\r\n\r\n\r\n    firstContact(event: MouseEvent): void {\r\n        let eventTarget: HTMLElement = event.target as HTMLElement;\r\n        let current_element = event.target as HTMLElement;\r\n        while (current_element != document.body) {\r\n            if (current_element.classList.contains(\"item\")) {\r\n                break;\r\n            }\r\n            current_element = current_element.parentElement as HTMLElement;\r\n        }   \r\n        let target = current_element.getAttribute(\"data-ddid\");\r\n        if (target == null || !current_element.classList.contains(\"item\")) return;\r\n\r\n        let item = this.items[target];\r\n        item.style.transition = \"transform 0s\";\r\n\r\n        this.target = Number(target);\r\n        let {pageX,pageY} = event;\r\n        this.initialPosition = {\r\n            x: pageX,\r\n            y: pageY\r\n        };\r\n    }\r\n\r\n    dragging(event: MouseEvent): void {\r\n        if (this.target == null) return;\r\n        let currentPosition = {\r\n            x: event.pageX,\r\n            y: event.pageY\r\n        }\r\n\r\n        this.isDragging = true;\r\n\r\n        let holder = this.holders[this.order.indexOf(this.target)];\r\n        let holderBoxY = DragDrop.utils.getBoundingClientRect(holder,\"y\") as number;\r\n        this.items[this.target].style.transform = `translate(${currentPosition.x - (this.initialPosition.x as number)}px,${(holderBoxY - (DragDrop.utils.getBoundingClientRect(this.container,\"y\") as number)) + currentPosition.y - (this.initialPosition.y as number)}px)`;\r\n\r\n        this.collission(holder);\r\n    }\r\n\r\n    collission(current: HTMLElement): void {\r\n        let currentBoxY = DragDrop.utils.getBoundingClientRect(current,\"y\") as number;\r\n        let holders = this.holders;\r\n\r\n        for (let i = 0;i < holders.length;i++) {\r\n            let holder = holders[i];\r\n            if (current == holder) continue;\r\n            let holderBox = DragDrop.utils.getBoundingClientRect(holder) as DOMRect;\r\n            let item = this.items[this.target as number];\r\n            let itemBox = DragDrop.utils.getBoundingClientRect(item) as DOMRect;\r\n            if (Math.abs((holderBox.y + holderBox.height / 2) - (itemBox.y + itemBox.height / 2)) <= itemBox.height / 2) {\r\n\r\n                this.order = DragDrop.utils.insertAt(this.order,this.target as number,i) as number[];\r\n                this.initialPosition.y = ((this.initialPosition.y as number) - currentBoxY) + (DragDrop.utils.getBoundingClientRect(holders[this.order.indexOf(this.target as number)],\"y\") as number);\r\n                this.updateItems();\r\n            }\r\n        }\r\n    }\r\n\r\n    releaseContact(): void {\r\n        if (this.target == null) return;\r\n\r\n        let item = this.items[this.target];\r\n        item.style.transition = `transform 0.15s ease-in`;\r\n        item.style.opacity = 1;\r\n        this.target = null;\r\n\r\n        function draggingStop(this: DragDrop) {\r\n            this.isDragging = false;\r\n        }\r\n        \r\n        setTimeout(draggingStop.bind(this),150);\r\n        \r\n        this.updateItems();\r\n    }\r\n\r\n    init(): void {\r\n        this.order = [];\r\n\r\n        this.container.style.display = \"flex\";\r\n        this.container.style.flexDirection = \"column\";\r\n        this.container.style.position = \"relative\";\r\n\r\n        this.setItems();\r\n        \r\n        const handleFirstContact = (event: MouseEvent): void => {\r\n            event.stopPropagation();\r\n            this.firstContact(event);\r\n        }\r\n\r\n        const handleDragging = (event: MouseEvent): void => {\r\n            this.dragging(event);\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const handleReleaseContact = (event: MouseEvent): void => {event.stopPropagation();this.releaseContact()};\r\n\r\n        const reqr = (event: Event): void => {\r\n            if (this.isDragging)\r\n                event.stopPropagation();\r\n        }\r\n\r\n        this.container.removeEventListener(\"mousedown\",handleFirstContact,true);\r\n        this.container.removeEventListener(\"mousemove\",handleDragging,true);\r\n        window.removeEventListener(\"mouseup\",handleReleaseContact,true);\r\n\r\n        this.container.addEventListener(\"mousedown\",handleFirstContact,true);\r\n        this.container.addEventListener(\"click\",(event: Event) => reqr(event),true);\r\n        this.container.addEventListener(\"mousemove\",handleDragging,true);\r\n        window.addEventListener(\"mouseup\",handleReleaseContact,true);\r\n    }\r\n    \r\n    static utils = {\r\n        insertAt: function(array: number[],target: number,to: number): number[] | undefined  {\r\n            let initial_index = array.indexOf(target);\r\n            if (initial_index < to) {\r\n                return array.slice(0,initial_index).concat(array.slice(initial_index + 1,to + 1)).concat([target]).concat(array.slice(to + 1,array.length));\r\n            } else if (initial_index > to) {\r\n                return array.slice(0,to).concat([target]).concat(array.slice(to,initial_index)).concat(array.slice(initial_index + 1,array.length));\r\n            }\r\n        },\r\n        getBoundingClientRect: function(target: HTMLElement,...properties: Array<string>): (number | DOMRect | object) {   \r\n            let rect: Record<string,number> = target.getBoundingClientRect() as any;\r\n            if (properties.length == 1) {\r\n                return rect[properties[0]];\r\n            }else if (!properties || properties.length == 0) return rect;\r\n\r\n            let result: Record<string,number> = {};\r\n            for (let i = 0;i < properties.length;i++) {\r\n                let property = properties[i];\r\n                result[property] = rect[property];\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}"],"names":[],"version":3,"file":"index.fb076a44.js.map","sourceRoot":"/__parcel_source_root/"}